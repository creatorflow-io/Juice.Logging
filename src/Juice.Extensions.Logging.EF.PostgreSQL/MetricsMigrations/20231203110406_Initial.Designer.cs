// <auto-generated />
using System;
using Juice.Extensions.Logging.EF.LogMetrics;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Juice.Extensions.Logging.EF.PostgreSQL.MetricsMigrations
{
    [DbContext(typeof(LogMetricsDbContext))]
    [Migration("20231203110406_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Juice.Extensions.Logging.EF.LogMetrics.CategoryLogMetric", b =>
                {
                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("Criticals")
                        .HasColumnType("bigint");

                    b.Property<long>("Errors")
                        .HasColumnType("bigint");

                    b.Property<long>("Warnings")
                        .HasColumnType("bigint");

                    b.HasKey("Category", "Timestamp");

                    b.ToTable("CategoryLogMetrics", "App");
                });

            modelBuilder.Entity("Juice.Extensions.Logging.EF.LogMetrics.OperationLogMetric", b =>
                {
                    b.Property<string>("Operation")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("Criticals")
                        .HasColumnType("bigint");

                    b.Property<long>("Errors")
                        .HasColumnType("bigint");

                    b.Property<long>("Warnings")
                        .HasColumnType("bigint");

                    b.HasKey("Operation", "Timestamp");

                    b.ToTable("OperationLogMetrics", "App");
                });

            modelBuilder.Entity("Juice.Extensions.Logging.EF.LogMetrics.ServiceLogMetric", b =>
                {
                    b.Property<Guid>("ServiceId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("Criticals")
                        .HasColumnType("bigint");

                    b.Property<long>("Errors")
                        .HasColumnType("bigint");

                    b.Property<long>("Warnings")
                        .HasColumnType("bigint");

                    b.HasKey("ServiceId", "Timestamp");

                    b.ToTable("ServiceLogMetrics", "App");
                });
#pragma warning restore 612, 618
        }
    }
}
